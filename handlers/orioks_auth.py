import asyncio

import aiogram.utils.markdown as md
from aiogram import types
from aiogram.dispatcher import FSMContext

import config
import db.user_status
import db.admins_statistics
import keyboards
import utils.exeptions
import utils.orioks
from answers import menu
from forms import Form
from main import bot
from utils import notify_to_user


async def cmd_start(message: types.Message):
    """
    @dp.message_handler(text='–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è')
    @dp.message_handler(commands='login')
    """
    if db.user_status.get_user_orioks_authenticated_status(user_telegram_id=message.from_user.id):
        return await message.reply(
            md.text(
                md.hbold('–¢—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª –≤—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç –û–†–ò–û–ö–°.'),
                md.text(),
                md.text('–í—ã–ø–æ–ª–Ω–∏—Ç—å –≤—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ –û–†–ò–û–ö–°: /logout'),
                sep='\n',
            )
        )
    await Form.login.set()
    await bot.send_message(
        message.chat.id,
        md.text(
            md.text('–Ø –±–µ—Å–ø–æ–∫–æ—é—Å—å, –º–æ–∏ –¥–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω—ã?'),
            md.text(),
            md.text('–û—Ç–º–µ–Ω–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:', md.hbold('/cancel')),
        ),
    )
    await message.reply(
        md.text(
            md.hbold('üîí –í–≤–µ–¥–∏ –ª–æ–≥–∏–Ω –û–†–ò–û–ö–°'),
        ),
        reply_markup=types.ReplyKeyboardRemove()
    )


async def cancel_handler(message: types.Message, state: FSMContext):
    """
    @dp.message_handler(state='*', commands='cancel')
    """
    current_state = await state.get_state()
    if current_state is None:
        return

    await state.finish()
    await message.reply(
        md.text(
            md.hbold('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.'),
            md.text('–ï—Å–ª–∏ —Ç—ã –±–æ–∏—à—å—Å—è –≤–≤–æ–¥–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ, –æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å–æ —Å–ª–µ–¥—É—é—â–µ–π <a href="https://orioks-monitoring.github.io/bot/faq#–ø–æ—á–µ–º—É-—ç—Ç–æ-–±–µ–∑–æ–ø–∞—Å–Ω–æ">–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π</a>'),
            sep='\n',
        ),
        reply_markup=keyboards.main_menu_keyboard(first_btn_text='–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è'),
        disable_web_page_preview=True,
    )


async def process_login_invalid(message: types.Message):
    """
    @dp.message_handler(lambda message: not message.text.isdigit(), state=Form.login)
    """
    return await message.reply(
        md.text(
            md.text('–õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä.'),
            md.text('–í–≤–µ–¥–∏ –ª–æ–≥–∏–Ω (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã):'),
            sep='\n'
        ),
    )


async def process_login(message: types.Message, state: FSMContext):
    """
    @dp.message_handler(state=Form.login)
    """
    async with state.proxy() as data:
        data['login'] = int(message.text)

    await Form.next()
    await message.reply(
        md.text(
            md.hbold('–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å –û–†–ò–û–ö–°:'),
            md.text(),
            md.text(
                md.hitalic('üîí –ü–∞—Ä–æ–ª—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏'),
                md.hitalic('–û–Ω –Ω–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –±—É–¥–µ—Ç —É–¥–∞–ª—ë–Ω –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π'),
                md.text('–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –º–æ–∂–Ω–æ <a href="https://orioks-monitoring.github.io/bot/faq#–ø–æ—á–µ–º—É-—ç—Ç–æ-–±–µ–∑–æ–ø–∞—Å–Ω–æ">–∑–¥–µ—Å—å</a>'),
                sep='. '
            ),
            sep='\n',
        ),
        disable_web_page_preview=True,
    )


async def process_password(message: types.Message, state: FSMContext):
    """
    @dp.message_handler(state=Form.password)
    """
    db.user_status.update_inc_user_orioks_attempts(user_telegram_id=message.from_user.id)
    if db.user_status.get_user_orioks_attempts(user_telegram_id=message.from_user.id) > config.ORIOKS_MAX_LOGIN_TRIES:
        return await message.reply(
            md.text(
                md.hbold('–û—à–∏–±–∫–∞! –¢—ã –∏—Å—Ç—Ä–∞—Ç–∏–ª –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç –û–†–ò–û–ö–°.'),
                md.text(),
                md.text('–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ë–æ—Ç–∞: @orioks_monitoring_support'),
                sep='\n',
            )
        )
    await Form.next()
    await state.update_data(password=message.text)
    async with state.proxy() as data:
        sticker_message = await bot.send_sticker(
            message.chat.id,
            config.TELEGRAM_STICKER_LOADER,
        )
        try:
            await utils.orioks.orioks_login_save_cookies(user_login=data['login'],
                                                         user_password=data['password'],
                                                         user_telegram_id=message.from_user.id)
            db.user_status.update_user_orioks_authenticated_status(
                user_telegram_id=message.from_user.id,
                is_user_orioks_authenticated=True
            )
            await menu.menu_command(chat_id=message.chat.id, user_id=message.from_user.id)
            await bot.send_message(
                message.chat.id,
                md.text(
                    md.text('–í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç –û–†–ò–û–ö–° –≤—ã–ø–æ–ª–Ω–µ–Ω!')
                )
            )
            db.admins_statistics.update_inc_admins_statistics_row_name(
                row_name=db.admins_statistics.AdminsStatisticsRowNames.orioks_success_logins
            )
        except utils.exeptions.OrioksInvalidLoginCredsError:
            db.admins_statistics.update_inc_admins_statistics_row_name(
                row_name=db.admins_statistics.AdminsStatisticsRowNames.orioks_failed_logins
            )
            await menu.menu_if_failed_login(chat_id=message.chat.id, user_id=message.from_user.id)
        except (asyncio.TimeoutError, TypeError) as e:
            await message.reply(md.text(
                md.hbold('üîß –°–µ—Ä–≤–µ—Ä –û–†–ò–û–ö–° –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!'),
                md.text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç.'),
                sep='\n',
            ))
            await notify_to_user.notify_admins(message='–°–µ—Ä–≤–µ—Ä –û–†–ò–û–ö–° –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç')
            await menu.menu_if_failed_login(chat_id=message.chat.id, user_id=message.from_user.id)
    await bot.delete_message(message.chat.id, message.message_id)
    await state.finish()

    await bot.delete_message(sticker_message.chat.id, sticker_message.message_id)


async def orioks_logout(message: types.Message):
    await message.reply(
        md.text(
            md.hbold('–í—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ –û–†–ò–û–ö–° –≤—ã–ø–æ–ª–Ω–µ–Ω.'),
            md.text('–¢–µ–ø–µ—Ä—å —Ç—ã –ù–ï –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –ë–æ—Ç–∞.'),
            sep='\n',
        ),
        reply_markup=keyboards.main_menu_keyboard(first_btn_text='–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è'),
    )
    db.user_status.update_user_orioks_authenticated_status(
        user_telegram_id=message.from_user.id,
        is_user_orioks_authenticated=False
    )
    utils.orioks.make_orioks_logout(user_telegram_id=message.from_user.id)
